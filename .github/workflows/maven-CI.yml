name: Example CI pipeline for building, testing and publishing project with maven, docker and github packages

on:
  workflow_dispatch:

jobs:
#   build_and_test:
#     runs-on: ubuntu-latest
#     name: Build and test project
#     steps:
#       - name: Checkout source code
#         uses: actions/checkout@v2
#       - name: Set up JDK 14
#         uses: actions/setup-java@v1
#         with:
#           java-version: 14
#       - name: Build project
#         run: ./mvnw compile -B
#         working-directory: sample-app
#       - name: Test project
#         run: ./mvnw test -B
#         working-directory: sample-app

#   upload_artifact:
#     runs-on: ubuntu-latest
#     needs: [ build_and_test ]
#     name: Upload artifact 
#     steps:
#       - name: Checkout source code
#         uses: actions/checkout@v2
#       - name: Set up JDK 14
#         uses: actions/setup-java@v1
#         with:
#           java-version: 14
#       - name: Build native executable
#         run: ./mvnw package
#         working-directory: sample-app
#       - name: Copy artifact to staging directory
#         run: mkdir staging && cp target/*.jar staging  
#         working-directory: sample-app
#       - name: Upload artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: Package
#           path: sample-app/staging

#   build-and-Push-Docker-Image:
#     runs-on: ubuntu-latest
#     name: Docker Build, Tag, Push
    
#     steps:     
#       - name: info
#         run: |
#           echo ${{ github.repository_owner }}
#           echo ${{ github.repository }}
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Set up JDK 14
#         uses: actions/setup-java@v1
#         with:
#           java-version: 14
#       - name: Build app
#         run: ./mvnw package -Pnative -Dquarkus.native.container-build=true -DskipTests=true --quiet
#         working-directory: sample-app
#         env:
#           GRAALVM_HOME: .graalvm
#       - name: Login to GitHub Packages Docker Registry
#         run: docker login docker.pkg.github.com --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }}
#         uses: docker/login-action@v1
#         with:
#           registry: docker.pkg.github.com
#           username: ${{ github.repository_owner }}
#           password: ${{ secrets.GITHUB_TOKEN }}
#       - name: Build Docker image with OpenJDK HotSpot
#         run: docker build -f src/main/docker/Dockerfile.jvm -t docker.pkg.github.com/$GITHUB_REPOSITORY/quarkus-app-openjdk:latest .
#       - name: Build Docker image with GraalVM
#         run: |
#           docker build -f src/main/docker/Dockerfile.native -t docker.pkg.github.com/${{ github.repository_owner }}/${{ github.repository }}:latest .
#           docker build -f src/main/docker/Dockerfile.native -t ghcr.io/${{ github.repository_owner }}/${{ github.repository }}:latest .
#         working-directory: sample-app
#       - name: Dockerize
#         uses: maxday/quarkus-dockerize-action@master
#         with:
#           tag: docker.pkg.github.com/vranajozef/quarkussample/sampleimage:latest
#          tag: ghcr.io/${{ github.repository }}:latest
#           executablePath: sample-app/src/main/docker/Dockerfile.native
#       - name: Push image        
#         run: 
#           docker push docker.pkg.github.com/vranajozef/quarkussample/sampleimage:latest
#           docker push ghcr.io/${{ github.repository }}:latest
#
#          docker push docker.pkg.github.com/$GITHUB_REPOSITORY/quarkus-app-openjdk
#          docker push docker.pkg.github.com/bmw/mvnexample:${{ github.sha }}
#           docker push docker.github.bytesource.info/bmw/mvnexample/testcontainer:${{ github.sha }}
#           docker push jozef/orgs/bmw/mvnexample:latest

          
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v1
#     - name: Download built artifact
#       uses: actions/download-artifact@master
#       with:
#         name: Package
#         path: sample-app/staging
#     - name: Set up JDK 14
#       uses: actions/setup-java@v1
#       with:
#        java-version: 14
#     - name: Dockerize
#       uses: maxday/quarkus-dockerize-action@master
#       with:
#         tag: docker.pkg.github.com/mvnexample/image:${{ github.sha }}
#         executablePath: sample-app/src/main/docker/Dockerfile.native  
#     - name: Log in to GitHub Docker Registry      
#       run: docker login docker.pkg.github.com --username jozef --password ${{ secrets.GITHUB_TOKEN }}
#     - name: Set up QEMU
#       uses: docker/setup-qemu-action@v1      
#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v1
#     - name: Build and push Docker image
#       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
#       with:
#         push: true
#         tags: |
#             docker.pkg.github.com/mvnexample/image:${{ github.sha }}
#       run: |        
#         docker login docker.pkg.github.com --username jozef --password ${{ secrets.GITHUB_TOKEN }}
#         docker push jozef/mvnexample                 
#      working-directory: sample-app
        
#   package:
#     runs-on: self-hosted
#     #needs: [ build_and_test ]
#     name: Package project
#     steps:
#       - name: Checkout source code
#         uses: actions/checkout@v2
#       - name: Set up JDK 14
#         uses: actions/setup-java@v1
#         with:
#           java-version: 14
#       - name: Package project        
#         run: ./mvnw package -Dquarkus.container-image.build=true
#         working-directory: sample-app
#       - name: Deploy
#         run: ./mvnw -Pgithub -DuseGitHubPackages=true deploy
#         working-directory: sample-app
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#   docker:
#     name: Publish to Docker repo
#     needs: [ build, test ]
#     runs-on: self-hosted

#    steps:
#      - uses: actions/checkout@v1
#      - name: Set up JDK 14
#        uses: actions/setup-java@v1
#        with:
#          java-version: 14
#      - name: Login to Docker repo
#        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}
#      - name: Build Docker image
#        run: docker build -f src/main/docker/Dockerfile.native -t quarkus/hello-quarkus .
#      - name: Publish Docker image
#        run: docker push $DOCKER_REPO
    
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Set up JDK 14
        uses: actions/setup-java@v1
        with:
          java-version: 14
      - name: Release
        run: |
          git config user.name "${{ github.event.head_commit.committer.name }}"
          git config user.email "${{ github.event.head_commit.committer.email }}"
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          mvn -B --file pom.xml release:prepare release:perform -Drepository.url=https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
        working-directory: sample-app
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_ACTOR: ${{ github.actor }}
      GITHUB_PAT: ${{ secrets.GH_PAT }}
      
